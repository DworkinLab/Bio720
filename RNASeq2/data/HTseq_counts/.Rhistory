library(DESeq2)
library(readr)
library(RColorBrewer)
library(gplots)
setwd("../data/HTseq_counts")
samples <- c("ORE_wt_rep1","ORE_wt_rep2","ORE_sdE3_rep1","ORE_sdE3_rep2","SAM_wt_rep1","SAM_wt_rep2","SAM_sdE3_rep1","SAM_sdE3_rep2","HYB_wt_rep1","HYB_wt_rep2","HYB_sdE3_rep1","HYB_sdE3_rep2")
# create names to match file names for the count data
files <- paste(samples, "_htseq_counts.txt", sep="")
backgrounds <- c(rep("ORE", 4), rep("SAM", 4), rep("HYB", 4))
genotypes <- c(rep(c("wt", "wt", "sdE3", "sdE3"), 3))
rna.design <- data.frame(sample=samples, file=files, background=backgrounds, genotype=genotypes)
samples <- c("ORE_wt_rep1","ORE_wt_rep2","ORE_sdE3_rep1","ORE_sdE3_rep2","SAM_wt_rep1","SAM_wt_rep2","SAM_sdE3_rep1","SAM_sdE3_rep2","HYB_wt_rep1","HYB_wt_rep2","HYB_sdE3_rep1","HYB_sdE3_rep2")
# create names to match file names for the count data
files <- paste(samples, "_htseq_counts.txt", sep="")
backgrounds <- c(rep("ORE", 4), rep("SAM", 4), rep("HYB", 4))
genotypes <- c(rep(c("wt", "wt", "sdE3", "sdE3"), 3))
rna.design <- data.frame(sample=samples, file=files, background=backgrounds, genotype=genotypes)
load.model <- formula(~ genotype)
#Now load the data into R
all.data <- DESeqDataSetFromHTSeqCount(sampleTable=rna.design, directory="./", design=load.model)
all.data <- DESeq(all.data)
plotDispEsts(all.data)
genotype.results <- as.data.frame(results(all.data, alpha=0.05))
summary(genotype.results)
summary(results(all.data))
genotype.results <- results(all.data, alpha=0.05)
summary(genotype.results)
sig.genotype.results <- genotype.results[order(genotype.results$padj <= 0.05),]
sig.genotype.results
genotype.results <- genotype.results[!is.na(genotype.results$padj),]
sig.genotype.results <- genotype.results[order(genotype.results$padj, decreasing=F),]
sig.genotype.results
sig.genotype.results[1:10,]
genotype.results[rownames(genotype.results) = "FBgn0003345"]
genotype.results[rownames(genotype.results) = "FBgn0003345",]
genotype.results[rownames(genotype.results) == "FBgn0003345",]
summary(genotype.results)
sig.genotype.results[1:80,]
as.data.frame(sig.genotype.results)[1:80,]
genotype.results[rownames(genotype.results) == "FBgn0003345",]
as.data.frame(sig.genotype.results)[1:80,]
genotype.results[rownames(genotype.results) == "FBgn0003975",]
genotype.results[rownames(genotype.results) == "FBgn0000179",]
plot(x = genotype.results$log2FoldChange,
y = -log10(genotype.results$padj),
pch=16, col=ifelse(genotype.results$padj <= 0.05, "red", "black"))
plot(x = genotype.results$log2FoldChange,
y = -log10(genotype.results$padj),
pch = 20,
col = ifelse(genotype.results$padj <= 0.05, "red", "black"),
ylab = "-log10(p)", xlab = "log2 fold change")
load.model.2 <- formula(~ background + genotype)
all.data.2 <- DESeqDataSetFromHTSeqCount(sampleTable = rna.design,
directory = "./counts",
design = load.model.2)
all.data.2 <- DESeq(all.data.2)
load.model.2 <- formula(~ background + genotype)
all.data.2 <- DESeqDataSetFromHTSeqCount(sampleTable = rna.design,
directory = "./",
design = load.model.2)
all.data.2 <- DESeq(all.data.2)
#Divide the plot window into two side-by-side panels
par(mfrow=c(1, 2))
#Plot the original dispersion estimates on the left first, then the new dispersion estimates on the right
plotDispEsts(all.data)
plotDispEsts(all.data.2)
genotype.results.2.df <- as.data.frame(results(all.data.2, alpha=0.05))
genotype.results.2 <- results(all.data.2, alpha=0.05)
summary(genotype.results.2)
genotype.results.2.df <- as.data.frame(results(all.data.2, alpha=0.05))
genotype.results.2 <- results(all.data.2, alpha=0.05)
summary(genotype.results.2)
plotMA(genotype.results.2, ylim =c(-2, 2))
par(mfrow=c(1,1))
par(mfrow=c(1,1))
plotMA(genotype.results.2, ylim =c(-2, 2))
genotype.results.2 <- genotype.results.2[!is.na(genotype.results.2$padj),]
sig.genotype.2.results <- genotype.results.2[order(genotype.results.2$padj, decreasing=F),]
as.data.frame(sig.genotype.results.2)[1:120,]
genotype.results.2 <- genotype.results.2[!is.na(genotype.results.2$padj),]
sig.genotype.2.results <- genotype.results.2[order(genotype.results.2$padj, decreasing=F),]
as.data.frame(sig.genotype.2.results)[1:120,]
for_pca <- rlog(all.data, blind=TRUE)
plotPCA(for_pca, intgroup=c("genotype", "background"))
plotPCA(for_pca, ntop = 5000,
intgroup=c("genotype", "background"))
plotPCA(for_pca, ntop = 2000,
intgroup=c("genotype", "background"))
plotPCA(for_pca, ntop = 1000,
intgroup=c("genotype", "background"))
plotPCA(for_pca, ntop = 100,
intgroup=c("genotype", "background"))
plotPCA(for_pca, ntop = 1000,
intgroup=c("genotype", "background"))
load.model.3 <- formula(~ background + genotype + background:genotype)
all.data.3 <- DESeqDataSetFromHTSeqCount(sampleTable=rna.design, directory="./", design=load.model.3)
all.data.3 <- DESeq(all.data.3)
summary(results(all.data.3))
results.GxB <- results.GxB[!is.na(results.GxB$padj), ]
results.GxB <- results(all.data.3)
summary(results.GxB)
results.GxB <- results.GxB[!is.na(results.GxB$padj), ]
results.GxB <- results.GxB[order(results.GxB$padj),]
head(results.GxB)
results.GxB <- results(all.data.3)
summary(results.GxB)
results.GxB <- results.GxB[!is.na(results.GxB$padj), ]
results.GxB <- results.GxB[order(results.GxB$padj),]
head(results.GxB)
as.data.frame(results.GxB)[1:35,]
contrast.results.3 <- as.data.frame(results(all.data.3, contrast=list(c("genotypewt", "backgroundORE.genotypewt") ,
c("genotypesdE3","backgroundORE.genotypesdE3") )))
contrast.results.3 <- contrast.results.3[(contrast.results.3$padj <= 0.05) & !is.na(contrast.results.3$padj),]
contrast.results.3 <- contrast.results.3[order(contrast.results.3$padj, decreasing=F),]
resultsNames(all.data.3)
q()
