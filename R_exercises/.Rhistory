data = dll_data_subset)
plot(femur ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.5, # size of symbol
col = genotype, # symbol colour
xlim = c(0.4, 0.57),
ylim = c(0.4, 0.62),
xlab = " tibia length",
ylab = "femur length",
main = "leg lengths measures",
data = dll_data_subset)
legend(x = "bottomright",
legend  = c("wt 25C", "wt 30C", "Dll 25C", "Dll 30C"),
pch = c(16, 17, 16, 17),
col = c(rep("red", 2), rep("blue", 2)))
plot(SCT ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
xlim = c(0.4, 0.57),
ylim = c(8, 18),
xlab = " tibia length",
ylab = "Number of Sex Comb Teeth",
main = "leg lengths measures",
data = dll_data_subset)
dll_data = read.csv("http://datadryad.org/bitstream/handle/10255/dryad.8377/dll.csv", header=TRUE)
dll_data <- na.omit(dll_data)
dll_data_subset <- dll_data[sample(nrow(dll_data), 300, replace = F),]
plot(jitter(SCT) ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
xlim = c(0.4, 0.57),
ylim = c(8, 18),
xlab = " tibia length",
ylab = "Number of Sex Comb Teeth",
main = "leg lengths measures",
data = dll_data_subset)
abline(v = mean(dll_data_subset$tibia),
lwd = 3, # line width,
lty = 2, # stippling of line
col = "grey")
abline(h = mean(dll_data_subset$SCT),
lwd = 3, lty = 2, col = "grey" )
plot(jitter(SCT) ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
xlab = " tibia length",
ylab = "Number of Sex Comb Teeth",
main = "leg lengths measures",
data = dll_data_subset)
abline(v = mean(dll_data_subset$tibia))
abline(h = mean(dll_data_subset$SCT))
plot(jitter(SCT) ~ tarsus,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
ylim = c(8, 18),
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "leg lengths measures",
data = dll_data_subset)
abline(v = mean(dll_data_subset$tibia))
abline(h = mean(dll_data_subset$SCT))
plot(SCT ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
xlim = c(0.4, 0.57),
ylim = c(8, 18),
xlab = " tibia length",
ylab = "Number of Sex Comb Teeth",
main = "leg lengths measures",
data = dll_data_subset)
plot(femur ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.5, # size of symbol
col = genotype, # symbol colour
xlim = c(0.4, 0.57),
ylim = c(0.4, 0.62),
xlab = " tibia length",
ylab = "femur length",
main = "leg lengths measures",
data = dll_data_subset)
legend(x = "bottomright",
legend  = c("wt 25C", "wt 30C", "Dll 25C", "Dll 30C"),
pch = c(16, 17, 16, 17),
col = c(rep("red", 2), rep("blue", 2)))
dll_data_subset$temp <- factor(dll_data_subset$temp)
plot(femur ~ tibia,
pch = c(16,17), # symbol
cex = 0.8, # size of symbol
col = "blue", # symbol colour
xlim = c(0.4, 0.57),
ylim = c(0.4, 0.62),
xlab = " tibia length",
ylab = "femur length",
main = "leg lengths measures",
data = dll_data_subset)
plot(femur ~ tibia,
pch = c(16, 17)[dll_data_subset$temp], # symbol
cex = 0.5, # size of symbol
col = "blue", # symbol colour
xlim = c(0.4, 0.57),
ylim = c(0.4, 0.62),
xlab = " tibia length",
ylab = "femur length",
main = "leg lengths measures",
data = dll_data_subset)
plot(femur ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.5, # size of symbol
col = dll_data_subset$genotype, # symbol colour
xlim = c(0.4, 0.57),
ylim = c(0.4, 0.62),
xlab = " tibia length",
ylab = "femur length",
main = "leg lengths measures",
data = dll_data_subset)
plot(femur ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.5, # size of symbol
col = genotype, # symbol colour
xlim = c(0.4, 0.57),
ylim = c(0.4, 0.62),
xlab = " tibia length",
ylab = "femur length",
main = "leg lengths measures",
data = dll_data_subset)
legend(x = "bottomright",
legend  = c("wt 25C", "wt 30C", "Dll 25C", "Dll 30C"),
pch = c(16, 17, 16, 17),
col = c(rep("red", 2), rep("blue", 2)))
plot(SCT ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
xlim = c(0.4, 0.57),
ylim = c(8, 18),
xlab = " tibia length",
ylab = "Number of Sex Comb Teeth",
main = "leg lengths measures",
data = dll_data_subset)
plot(jitter(SCT) ~ tibia,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
xlim = c(0.4, 0.57),
ylim = c(8, 18),
xlab = " tibia length",
ylab = "Number of Sex Comb Teeth",
main = "leg lengths measures",
data = dll_data_subset)
plot(jitter(SCT) ~ tarsus,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
ylim = c(8, 18),
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "leg lengths measures",
data = dll_data_subset)
abline(v = mean(dll_data_subset$tarsus))
abline(h = mean(dll_data_subset$SCT))
plot(jitter(SCT) ~ tarsus,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
ylim = c(8, 18),
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "leg lengths measures",
data = dll_data_subset)
abline(v = mean(dll_data_subset$tarsus),
lwd = 3, # line width,
lty = 2, # stippling of line
col = "grey")
abline(h = mean(dll_data_subset$SCT),
lwd = 3, lty = 2, col = "grey" )
mod1 <- lm(SCT ~ tarsus,
data = dll_data_subset)
plot(SCT ~ tarsus,
pch = c(16,17)[dll_data_subset$temp], # symbol
cex = 0.75, # size of symbol
col = c("blue", "red")[dll_data_subset$genotype], # symbol colour
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "SCT VS tarsus",
data = dll_data_subset)
# and then plot based on the model fit.
abline(mod1, lwd = 2, lty = 2)
plot(SCT ~ tarsus,
pch = c(16,17)[dll_data_subset$temp],
cex = 0.75,
col = dll_data_subset$genotype,
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "SCT VS tarsus",
data = dll_data_subset)
lapply(dll_data_subset$genotype,
function(x) {
abline(lm(SCT ~ tarsus, dll_data_subset, subset = (genotype == x)), col = x)
})
plot(SCT ~ tarsus,
pch = c(16,17)[dll_data_subset$temp],
cex = 0.75,
col = dll_data_subset$genotype,
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "SCT VS tarsus",
data = dll_data_subset)
abline(lm(SCT ~ tarsus, data = dll_data_subset), lty = 2, col = "grey")
lapply(dll_data_subset$genotype,
function(x) {
abline(lm(SCT ~ tarsus, dll_data_subset, subset = (genotype == x)), col = x)
})
plot(SCT ~ tarsus,
pch = c(16,17)[dll_data_subset$temp],
cex = 0.75,
col = dll_data_subset$genotype,
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "SCT VS tarsus",
data = dll_data_subset)
abline(lm(SCT ~ tarsus, data = dll_data_subset), lty = 2, lwd =2, col = "grey")
lapply(dll_data_subset$genotype,
function(x) {
abline(lm(SCT ~ tarsus, dll_data_subset, subset = (genotype == x)), col = x)
})
plot(SCT ~ tarsus,
pch = c(16,17)[dll_data$temp],
cex = 0.75,
col = dll_data$genotype,
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "SCT VS tarsus",
data = dll_data)
abline(lm(SCT ~ tarsus, data = dll_data), lty = 2, lwd =2, col = "grey")
lapply(dll_data$genotype,
function(x) {
abline(lm(SCT ~ tarsus, dll_data, subset = (genotype == x)), col = x)
})
plot(SCT ~ tarsus,
pch = c(16,17)[dll_data$temp],
cex = 0.75,
col = dll_data$genotype,
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "SCT VS tarsus",
data = dll_data)
abline(lm(SCT ~ tarsus, data = dll_data), lty = 2, lwd =2, col = "grey")
sapply(dll_data$genotype,
function(x) {
abline(lm(SCT ~ tarsus, dll_data, subset = (genotype == x)), col = x)
})
plot(SCT ~ tarsus,
pch = c(16,17)[dll_data_subset$temp],
cex = 0.75,
col = dll_data_subset$genotype,
xlab = " tarsus length",
ylab = "Number of Sex Comb Teeth",
main = "SCT VS tarsus",
data = dll_data_subset)
abline(lm(SCT ~ tarsus, data = dll_data_subset), lty = 2, lwd =2, col = "grey")
lapply(dll_data_subset$genotype,
function(x) {
abline(lm(SCT ~ tarsus, dll_data_subset, subset = (genotype == x)), col = x)
})
?lengths
basefreq <- sapply(reads, BaseFrequencies, USE.NAMES = T)
x <- 1:50
y <- rnorm(length(x), 2 + 0.8*x, sd= 5 + 0.1*x)
model_1 <- lm(y ~ x)
new <- data.frame(x = seq(min(x), max(x), 1))
pred <- predict(model_1, newdata = new, interval = "confidence")
plot(y ~ x, pch = 20, cex = 1.5)
lines(x = new[,1], y = pred[,1], lwd = 3) # this would be the same as abline(model.1)
lines(x = new[,1], y = pred[,3], lwd = 3, lty = 2)
lines(x = new[,1], y = pred[,2], lwd = 3, lty = 2)
plot(y ~ x, pch = 20, cex = 1.5)
matlines(x = new[,1], y = pred[,1:3], lwd=c(3,3,3), lty=c(1,2,2), col = 1)
plot(y ~ x, pch= 20, type = "n")
polygon(x = c(1:nrow(new), nrow(new):1),
y = c(pred[,2], rev(pred[,3])),
col="grey", border = "grey")
lines(x = new[,1], y = pred[,1], lwd = 3)
# And the data
points(y ~ x, pch = 20, cex = 1.5)
plot(y ~ x, type = "n",
xlab = "predictor", ylab = "response", main = "Nice looking plot",
cex.lab = 1.7, cex.axis = 1.5, cex.main = 2.1,
family = "serif", pch = 20)
polygon(x = c(1:nrow(new), nrow(new):1),
y = c(pred[,2], rev(pred[,3])),
col= "#fe000032", border = "#fe000032")
points(y ~ x, pch = 20, cex = 2)
quartz()
plot(y ~ x, type = "n",
xlab = "predictor", ylab = "response", main = "Nice looking plot",
cex.lab = 1.7, cex.axis = 1.5, cex.main = 2.1,
family = "serif", pch = 20)
polygon(x = c(1:nrow(new), nrow(new):1),
y = c(pred[,2], rev(pred[,3])),
col= "#fe000032", border = "#fe000032")
points(y ~ x, pch = 20, cex = 2)
x <- 1:50
y <- rnorm(length(x), 2 + 0.8*x, sd= 5 + 0.1*x)
model_1 <- lm(y ~ x)
x <- 1:50
y <- rnorm(length(x), 2 + 0.8*x, sd= 5 + 0.1*x)
model_1 <- lm(y ~ x)
new <- data.frame(x = seq(min(x), max(x), 1))
pred <- predict(model_1, newdata = new, interval = "confidence")
plot(y ~ x, type = "n",
xlab = "predictor", ylab = "response", main = "Nice looking plot",
cex.lab = 1.7, cex.axis = 1.5, cex.main = 2.1,
family = "serif", pch = 20)
polygon(x = c(1:nrow(new), nrow(new):1),
y = c(pred[,2], rev(pred[,3])),
col= "#fe000032", border = "#fe000032")
points(y ~ x, pch = 20, cex = 2)
quartz()
plot(y ~ x, type = "n",
xlab = "predictor", ylab = "response", main = "Nice looking plot",
cex.lab = 1.7, cex.axis = 1.5, cex.main = 2.1,
family = "serif", pch = 20)
polygon(x = c(1:nrow(new), nrow(new):1),
y = c(pred[,2], rev(pred[,3])),
col= "#fe000032", border = "#fe000032")
points(y ~ x, pch = 20, cex = 2)
x <- 1:50
y <- rnorm(n = length(x), mean = 2 + (0.8*x), sd= 3)
model_1 <- lm(y ~ x)
rnorm()
model_1
x <- 1:50
y <- rnorm(n = length(x), mean = 2 + (0.8*x), sd= 3)
model_1 <- lm(y ~ x)
model_1
x <- 1:50
y <- rnorm(n = length(x), mean = (2 + (0.8*x)), sd= 3)
model_1 <- lm(y ~ x)
model_1
x <- 1:50
y <- rnorm(n = length(x), mean = (2 + (0.8*x)), sd= 0.1)
model_1 <- lm(y ~ x)
model_1
x <- 1:50
y <- rnorm(n = length(x), mean = (2 + (0.8*x)), sd= 2)
model_1 <- lm(y ~ x)
new <- data.frame(x = seq(min(x), max(x), 1))
pred <- predict(model_1, newdata = new, interval = "confidence")
quartz()
plot(y ~ x, type = "n",
xlab = "predictor", ylab = "response", main = "Nice looking plot",
cex.lab = 1.7, cex.axis = 1.5, cex.main = 2.1,
family = "serif", pch = 20)
polygon(x = c(1:nrow(new), nrow(new):1),
y = c(pred[,2], rev(pred[,3])),
col= "#fe000032", border = "#fe000032")
points(y ~ x, pch = 20, cex = 2)
x <- 1:50
y <- rnorm(n = length(x), mean = (2 + (0.8*x)), sd= 4)
model_1 <- lm(y ~ x)
new <- data.frame(x = seq(min(x), max(x), 1))
pred <- predict(model_1, newdata = new, interval = "confidence")
quartz()
plot(y ~ x, type = "n",
xlab = "predictor", ylab = "response", main = "Nice looking plot",
cex.lab = 1.7, cex.axis = 1.5, cex.main = 2.1,
family = "serif", pch = 20)
polygon(x = c(1:nrow(new), nrow(new):1),
y = c(pred[,2], rev(pred[,3])),
col= "#fe000032", border = "#fe000032")
points(y ~ x, pch = 20, cex = 2)
old_par <- par()
par <- old_par
dll.data = read.csv("http://datadryad.org/bitstream/handle/10255/dryad.8377/dll.csv", header=TRUE)
dll.data <- na.omit(dll.data)
model.dll.25 <- lm(SCT ~ tarsus, data=dll.data, subset=genotype=="Dll" & temp==25)
model.wt.25 <- lm(SCT ~ tarsus, data=dll.data, subset=genotype=="wt" & temp==25)
new.Dll <- with(dll.data[dll.data$genotype =="Dll" & dll.data$temp==25,],
data.frame(tarsus = seq(range(tarsus)[1], range(tarsus)[2], by=0.005) ))
pred.Dll <-predict(model.dll.25, new.Dll, interval="confidence")
new.wt <- with(dll.data[dll.data$genotype =="wt" & dll.data$temp==25,],
data.frame(tarsus = seq(range(tarsus)[1], range(tarsus)[2], by=0.005) ))
pred.wt <-predict(model.wt.25, new.wt, interval="confidence")
old_par <- par()
par(mar = c(5,5,4,1), family = "serif")
with(dll.data[dll.data$temp==25,],
plot(SCT ~ tarsus, col=c("red", "blue")[dll.data$genotype], type = "n",
ylab = " # of Sex Comb Teeth", xlab = "Tarsus Length (mm)",
main = expression(paste("Scaling relationships between SCT and tarsus length for ", italic(Drosophila), " genotypes" )),
cex.lab = 1.4, cex.axis = 1.5, cex.main = 1.5,
family = "serif", pch = 20))
# Confidence band for the wild-type flies
polygon(x = c(new.wt[,1], rev(new.wt[,1])), y = c(pred.wt[,2], rev(pred.wt[,3])),
col="#0000ff32", border = "#0000ff32")
# lines(x = new.wt[,1], y = pred.wt[,1], lwd = 2, lty = 2) # add back if you want line for slope
# confidence band for the mutant flies
polygon(x = c(new.Dll[,1], rev(new.Dll[,1])), y = c(pred.dll[,2], rev(pred.dll[,3])),
col="#ff000032", border = "#ff000032")
# lines(x = new.Dll[,1], y = pred.dll[,1], lwd=2, lty = 2)
with(dll.data[dll.data$temp==25,],
points(jitter(SCT) ~ tarsus, pch = 20, cex = 1.5,
col=c("#ff000050", "#0000ff50")[dll.data$genotype] ))
legend(x = "topleft",
legend = c(expression(paste(italic("Distal-less")^11, "/+")), "wild-type"),
col= c("red", "blue"), pch = 16, cex = 1.5, bty = "n")
quartz()
old_par <- par()
par(mar = c(5,5,4,1), family = "serif")
with(dll.data[dll.data$temp==25,],
plot(SCT ~ tarsus, col=c("red", "blue")[dll.data$genotype], type = "n",
ylab = " # of Sex Comb Teeth", xlab = "Tarsus Length (mm)",
main = expression(paste("Scaling relationships between SCT and tarsus length for ", italic(Drosophila), " genotypes" )),
cex.lab = 1.4, cex.axis = 1.5, cex.main = 1.5,
family = "serif", pch = 20))
# Confidence band for the wild-type flies
polygon(x = c(new.wt[,1], rev(new.wt[,1])), y = c(pred.wt[,2], rev(pred.wt[,3])),
col="#0000ff32", border = "#0000ff32")
# lines(x = new.wt[,1], y = pred.wt[,1], lwd = 2, lty = 2) # add back if you want line for slope
# confidence band for the mutant flies
polygon(x = c(new.Dll[,1], rev(new.Dll[,1])), y = c(pred.dll[,2], rev(pred.dll[,3])),
col="#ff000032", border = "#ff000032")
# lines(x = new.Dll[,1], y = pred.dll[,1], lwd=2, lty = 2)
with(dll.data[dll.data$temp==25,],
points(jitter(SCT) ~ tarsus, pch = 20, cex = 1.5,
col=c("#ff000050", "#0000ff50")[dll.data$genotype] ))
legend(x = "topleft",
legend = c(expression(paste(italic("Distal-less")^11, "/+")), "wild-type"),
col= c("red", "blue"), pch = 16, cex = 1.5, bty = "n")
quartz()
old_par <- par()
par(mar = c(5,5,4,1), family = "serif")
with(dll.data[dll.data$temp==25,],
plot(SCT ~ tarsus, col=c("red", "blue")[dll.data$genotype], type = "n",
ylab = " # of Sex Comb Teeth", xlab = "Tarsus Length (mm)",
main = expression(paste("Scaling relationships between SCT and tarsus length for ", italic(Drosophila), " genotypes" )),
cex.lab = 1.4, cex.axis = 1.5, cex.main = 1.5,
family = "serif", pch = 20))
# Confidence band for the wild-type flies
polygon(x = c(new.wt[,1], rev(new.wt[,1])), y = c(pred.wt[,2], rev(pred.wt[,3])),
col="#0000ff32", border = "#0000ff32")
# lines(x = new.wt[,1], y = pred.wt[,1], lwd = 2, lty = 2) # add back if you want line for slope
# confidence band for the mutant flies
polygon(x = c(new.Dll[,1], rev(new.Dll[,1])), y = c(pred.dll[,2], rev(pred.dll[,3])),
col="#ff000032", border = "#ff000032")
# lines(x = new.Dll[,1], y = pred.dll[,1], lwd=2, lty = 2)
with(dll.data[dll.data$temp==25,],
points(jitter(SCT) ~ tarsus, pch = 20, cex = 1.5,
col=c("#ff000050", "#0000ff50")[dll.data$genotype] ))
legend(x = "topleft",
legend = c(expression(paste(italic("Distal-less")^11, "/+")), "wild-type"),
col= c("red", "blue"), pch = 16, cex = 1.5, bty = "n")
model.dll.25 <- lm(SCT ~ tarsus, data=dll.data, subset=genotype=="Dll" & temp==25)
model.wt.25 <- lm(SCT ~ tarsus, data=dll.data, subset=genotype=="wt" & temp==25)
new.Dll <- with(dll.data[dll.data$genotype =="Dll" & dll.data$temp==25,],
data.frame(tarsus = seq(range(tarsus)[1], range(tarsus)[2], by=0.005) ))
pred.Dll <-predict(model.dll.25, new.Dll, interval="confidence")
new.wt <- with(dll.data[dll.data$genotype =="wt" & dll.data$temp==25,],
data.frame(tarsus = seq(range(tarsus)[1], range(tarsus)[2], by=0.005) ))
pred.wt <-predict(model.wt.25, new.wt, interval="confidence")
old_par <- par()
par(mar = c(5,5,4,1), family = "serif")
with(dll.data[dll.data$temp==25,],
plot(SCT ~ tarsus, col=c("red", "blue")[dll.data$genotype], type = "n",
ylab = " # of Sex Comb Teeth", xlab = "Tarsus Length (mm)",
main = expression(paste("Scaling relationships between SCT and tarsus length for ", italic(Drosophila), " genotypes" )),
cex.lab = 1.4, cex.axis = 1.5, cex.main = 1.5,
family = "serif", pch = 20))
# Confidence band for the wild-type flies
polygon(x = c(new.wt[,1], rev(new.wt[,1])), y = c(pred.wt[,2], rev(pred.wt[,3])),
col="#0000ff32", border = "#0000ff32")
# lines(x = new.wt[,1], y = pred.wt[,1], lwd = 2, lty = 2) # add back if you want line for slope
# confidence band for the mutant flies
polygon(x = c(new.Dll[,1], rev(new.Dll[,1])), y = c(pred.Dll[,2], rev(pred.Dll[,3])),
col="#ff000032", border = "#ff000032")
# lines(x = new.Dll[,1], y = pred.Dll[,1], lwd=2, lty = 2)
with(dll.data[dll.data$temp==25,],
points(jitter(SCT) ~ tarsus, pch = 20, cex = 1.5,
col=c("#ff000050", "#0000ff50")[dll.data$genotype] ))
legend(x = "topleft",
legend = c(expression(paste(italic("Distal-less")^11, "/+")), "wild-type"),
col= c("red", "blue"), pch = 16, cex = 1.5, bty = "n")
quartz()
old_par <- par()
par(mar = c(5,5,4,1), family = "serif")
with(dll.data[dll.data$temp==25,],
plot(SCT ~ tarsus, col=c("red", "blue")[dll.data$genotype], type = "n",
ylab = " # of Sex Comb Teeth", xlab = "Tarsus Length (mm)",
main = expression(paste("Scaling relationships between SCT and tarsus length for ", italic(Drosophila), " genotypes" )),
cex.lab = 1.4, cex.axis = 1.5, cex.main = 1.5,
family = "serif", pch = 20))
# Confidence band for the wild-type flies
polygon(x = c(new.wt[,1], rev(new.wt[,1])), y = c(pred.wt[,2], rev(pred.wt[,3])),
col="#0000ff32", border = "#0000ff32")
# lines(x = new.wt[,1], y = pred.wt[,1], lwd = 2, lty = 2) # add back if you want line for slope
# confidence band for the mutant flies
polygon(x = c(new.Dll[,1], rev(new.Dll[,1])), y = c(pred.Dll[,2], rev(pred.Dll[,3])),
col="#ff000032", border = "#ff000032")
# lines(x = new.Dll[,1], y = pred.Dll[,1], lwd=2, lty = 2)
with(dll.data[dll.data$temp==25,],
points(jitter(SCT) ~ tarsus, pch = 20, cex = 1.5,
col=c("#ff000050", "#0000ff50")[dll.data$genotype] ))
legend(x = "topleft",
legend = c(expression(paste(italic("Distal-less")^11, "/+")), "wild-type"),
col= c("red", "blue"), pch = 16, cex = 1.5, bty = "n")
?pdf
?predict
methods(predict)
