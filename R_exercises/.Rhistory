word_counts_25 <- data.frame(word_counts_25)
with(word_counts_25,
wordcloud(word, n, random.order = F, max.words = 25, col = rainbow(n = 5)))
#library(BiocInstaller) # old deprecated
library(BiocManager) # new way
library(Biostrings)
library(GenomicRanges)
library(GenomicFeatures)
library('BSgenome')
library(seqLogo)
library(BSgenome.Dmelanogaster.UCSC.dm6)
Dm6 <- BSgenome.Dmelanogaster.UCSC.dm6
head(sort(seqlengths(Dm6), decreasing  = TRUE))
seqinfo(Dm6)
sum(seqlengths(Dm6)[1:8])
sum(seqlengths(Dm6)[1:8])/1e6  # Mbp
alphabetFrequency(Dm6$chr2R)
alphabetFrequency(Dm6$chr2R,
baseOnly = T, as.prob = T)
dm_chrX <- getSeq(Dm6, names = "chrX")
dm_chrX
show(dm_chrX)
print(dm_chrX)
class(dm_chrX) # This is now a DNAString type object, not a BSgenome object
typeof(dm_chrX)
length(dm_chrX)/1e6  # hey, why does this work!?   ;)
nchar(dm_chrX)/1e6
alphabetFrequency(dm_chrX, baseOnly = T, as.prob = T)
dm_chr3L <- getSeq(Dm6, names = "chr3L",
start = 1000000,
end = 2000000,
strand = "-")
alphabetFrequency(dm_chr3L, baseOnly = T, as.prob = T)
seqs2 <- c("CCCNGG", "CCCNTTTT", "AAANTT", "TAGNT")
n = sapply(seqs2, function(x) countPattern(x, dm_chrX, fixed = FALSE ))
n
which.max(n)
data(HNF4alpha)
HNF4alpha
class(HNF4alpha)
pfm <- consensusMatrix(HNF4alpha)
pfm
round(pfm[1:4,]/colSums(pfm[1:4,]), 2)
class(pfm)
pwm <- PWM(HNF4alpha, type = "prob")
round(pwm[1:4,]/colSums(pwm[1:4,]), 2)
maxWeights(pwm)
conMat <- consensusMatrix(HNF4alpha, as.prob = T)[1:4,]
seqLogo(conMat)
seqLogo(pwm[1:4,]/colSums(pwm[1:4,]))
pwm
?matchPWM
dm_txdb <- makeTxDbFromUCSC("dm6", tablename="refGene")
dm_txdb
head(transcripts(dm_txdb))  # let's look at the transcripts we have
head(up10000seqs)
up10000seqs <- extractUpstreamSeqs(Dm6, dm_txdb, width=10000)
head(up10000seqs)
?vcountPatter
?vcountPattern
upstream_hits <- vcountPattern("NGNNCAAAGNNCA", up10000seqs, fixed = FALSE)
length(upstream_hits)
upstream_hits
?maskMotif
TF_hits_blah <- matchPWM(pwm, up10000seqs, with.score = TRUE)
matchPWM()
?matchPWM
q()
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
options(digits  = 3)
dll_data = read.csv("http://datadryad.org/bitstream/handle/10255/dryad.8377/dll.csv", header=TRUE)
dll_data = read.csv("http://beaconcourse.pbworks.com/f/dll.csv",
h = T, stringsAsFactors = TRUE)
anyDuplicated(dll_data)
mean(dll_data$femur)
mean(dll_data$femur, na.rm = TRUE)
dll_data <- na.omit(dll_data)
mean(dll_data$femur)
anyDuplicated(dll_data)
new_rows <- dll_data[sample(nrow(dll_data), size = 5, replace = T ),]
dll_data2 <- rbind(dll_data, new_rows)
str(dll_data2)
dll_data_unique <- unique(dll_data2)
dim(dll_data_unique)
dim(dll_data2)
dim(dll_data)
rm(dll_data_complete, dll_data_unique, dll_data2)
str(dll_data)
summary(dll_data)
str(dll_data)
dim(dll_data)
head(dll_data)
head(is.na(dll_data))
sum(is.na(dll_data))
mean(dll_data$femur)
mean(dll_data$femur, na.rm = TRUE)
dll_data_complete <- na.omit(dll_data)
dim(dll_data)
dim(dll_data_complete)
dll_data <- na.omit(dll_data)
mean(dll_data$femur)
head(duplicated(dll_data))
tail(duplicated(dll_data))
sum(duplicated(dll_data))
any(duplicated(dll_data))
anyDuplicated(dll_data)
dll_data[anyDuplicated(dll_data),]
new_rows <- dll_data[sample(nrow(dll_data), size = 5, replace = T ),]
dll_data2 <- rbind(dll_data, new_rows)
str(dll_data2)
any(duplicated(dll_data2))
dll_data2[duplicated(dll_data2),]
dll_data_unique <- unique(dll_data2)
dim(dll_data_unique)
dim(dll_data2)
dim(dll_data)
rm(dll_data_complete, dll_data_unique, dll_data2)
dll_data_wt <- dll_data[dll_data$genotype == "wt",]
with(dll_data, table(genotype))
nrow(dll_data_wt)
levels(dll_data_wt$genotype)
dll_data_wt <- droplevels(dll_data_wt)
levels(dll_data_wt$genotype)
dll_data_Dll <- subset(dll_data, genotype == "Dll" )
dim(dll_data_Dll)
with(dll_data, table(genotype))
levels(dll_data_Dll$genotype)
dll_data_Dll <- droplevels(dll_data_Dll)
dll_data_Dll <- subset(dll_data,
genotype == "Dll",
select = c(line, genotype, temp, SCT))
dim(dll_data_Dll)
matched_set <- dll_data$line %in% c("line-Sam", "line-1")
sum(matched_set)
dll_data_new_subset <- dll_data[matched_set,]
dim(dll_data_new_subset)
rm(dll_data_Dll, dll_data_wt, dll_data_new_subset, matched_set)
levels(dll_data$line)
line_str <- as.character(dll_data$line)
str(line_str)
head(line_str)
line_names <- substr(line_str,
start = 6, stop= 1000000L )
head(line_names)
tail(line_names)
line_names2 <- strsplit(line_str, split = "-")
head(line_names2)
?strsplit
str(line_str)
line_names3 <- gsub(pattern = "line-",
replacement = "",
x = line_str)
head(line_names3)
tail(line_names3)
line_names3 <- tolower(line_names3)
head(line_names3)
tail(line_names3, n = 25)
line_names3 <- sub("sam", "SAMARKAND", line_names3)
str(dll_data$temp)
temp_as_factor <- with(dll_data,
factor(temp,
labels = c("LowTemp", "HighTemp")))
str(temp_as_factor)
head(temp_as_factor)
tail(temp_as_factor)
temp_as_factor2 <- with(dll_data, ifelse(temp == 25, "LowTemp",
ifelse(temp == 30, "HighTemp", NA)))
temp_as_factor2 <- factor(temp_as_factor2)
str(temp_as_factor2)
head(sort(dll_data$SCT))
tail(sort(dll_data$SCT))
dll_data_sorted <- dll_data[order(dll_data$SCT),]
head(dll_data_sorted)
dll_data_sorted <- dll_data[order(-dll_data$SCT),]
head(dll_data_sorted)
dll_data_sorted <- dll_data[order(dll_data$SCT, dll_data$temp),]
head(dll_data_sorted)
head(dll_data)
line_names <- dll_data$line
levels(line_names)
elevations <- c(100, 300, 270, 250, 500, 900, 500, 1100, 500,
3000,500, 570, 150, 800, 600, 500, 1900, 100,
300, 270, 250, 500, 900, 500, 1100, 500, 600)
MeanDayTimeTemp <- c(rnorm(27, mean = 20, sd = 5))
elevation_data <- data.frame(levels(line_names),
elevations,
MeanDayTimeTemp)
names(dll_data)
names(elevation_data)
names(elevation_data)[1] <- "line"
str(elevation_data)
merged_data <- merge(x = elevation_data,
y = dll_data)
merged_data <- merge(x = elevation_data,
y = dll_data,
sort = FALSE)
head(merged_data)
tail(merged_data)
dll_data = read.csv("http://beaconcourse.pbworks.com/f/dll.csv",
h = T, stringsAsFactors = TRUE)
?read.csv
library(tidyr)
library(dplyr)
library(stringr)
?read_csv
library(tidyr)
library(readr)
library(stringr)
?read_csv
dll_data = read_csv("http://beaconcourse.pbworks.com/f/dll.csv")
str(dll_data)
spec(dll_data)
summary(dll_data)
dim(dll_data)
head(dll_data)
class(dll_data)
head(is.na(dll_data))
sum(is.na(dll_data))
glimpse(dll_data)
mean(dll_data$femur)
mean(dll_data$femur, na.rm = TRUE)
dll_data_complete <- na.omit(dll_data)
dim(dll_data)
dim(dll_data_complete)
dll_data <- na.omit(dll_data)
mean(dll_data$femur)
femur_temp <- select(dll_data, femur)
head(femur_temp)
spec(femur_temp)
glimpse(femur_temp)
summarize(meanstr(dll_data)))
summarize(mean(dll_data))
summarize(mean(dll_data, na.rm = T))
summarize(mean(femur_temp))
summarize(mean(femur_temp, na.rm = T))
summarize(mean_femur = mean(femur_temp))
mean(femur_temp)
mean(femur_temp, na.rm = T)
mean(as.numeric(femur_temp), na.rm = T)
str(dll_data) <- select(dll_data, femur)
glimpse(femur_temp)
glimpse(femur_temp$femur)
summarise(dll_data, femur_avg = mean(femur) )
dll_data %>%
select(femur) %>%
summarize(mean)
dll_data %>%
select(femur) %>%
summarize(femur_mean = mean())
dll_data %>%
select(femur) %>%
summarize(femur_mean = mean(femur))
new_rows <- dll_data[sample(nrow(dll_data), size = 5, replace = T ),]
dll_data2 <- rbind(dll_data, new_rows)
str(dll_data2)
any(duplicated(dll_data2))
dll_data2[duplicated(dll_data2),]
summarise(dll_data, femur_na = is.na(femur))
dll_data %>%
select(femur) %>%
count(is.na(femur))
class(dll_data)
dll_data = read_csv("http://beaconcourse.pbworks.com/f/dll.csv")
anyNA(dll_data)
mean(dll_data$femur)
dll_data %>%
select(femur) %>%
summarize(femur_mean = mean(femur))
dll_data %>%
select(femur) %>%
summarize(femur_mean = mean(femur, na.rm = TRUE))
dll_data %>%
select(femur) %>%
count(is.na(femur))
summarise(dll_data, femur_avg = mean(femur))
summarise(dll_data, femur_avg = mean(femur, na.rm = TRUE))
dll_data %>%
select(femur) %>%
count(is.na(femur))
dll_data %>%
select(femur) %>%
summarize(femur_mean = mean(femur, na.rm = TRUE))
femur_mean
head(duplicated(dll_data))
tail(duplicated(dll_data))
sum(duplicated(dll_data))
any(duplicated(dll_data))
anyDuplicated(dll_data)
dll_data[anyDuplicated(dll_data),]
head(duplicated(dll_data_complete))
tail(duplicated(dll_data_complete))
sum(duplicated(dll_data))
sum(duplicated(dll_data_complete))
any(duplicated(dll_data_complete))
dll_data_complete[anyDuplicated(dll_data_complete),]
anyDuplicated(dll_data_complete)
new_rows <- ddll_data_complete[sample(nrow(dll_data_complete),
size = 5, replace = T ),]
dll_data2 <- rbind(dll_data_complete, new_rows)
str(dll_data2)
any(duplicated(dll_data2))
dll_data2[duplicated(dll_data2),]
summarize(dll_data2, duplicated)
summarize(dll_data2, anyDuplicated)
summarize(dll_data2, anyDuplicated(.))
rm(dll_data_unique, dll_data2)
str(dll_data_complete)
dll_data <- dll_data_complete
str(dll_data)
dll_data_wt <- dll_data[dll_data$genotype == "wt",]
dll_data_unique2 <- distinct(dll_data2)
new_rows <- ddll_data_complete[sample(nrow(dll_data_complete),
size = 5, replace = T ),]
dll_data2 <- rbind(dll_data_complete, new_rows)
str(dll_data2)
dll_data_unique2 <- distinct(dll_data2)
dll_data_unique2
dim(dll_data2)
dll_data_wt_ty <- dll_data %>%
filter(genotype == "wt")
str(dll_data_wt_ty)
dll_data_wt_ty %>%
count(genotype)
dll_data %>%
count(genotype)
with(dll_data,
table(genotype))
with(dll_data_wt,
table(genotype))
dll_data_wt_ty %>%
count()
dll_data_wt_ty %>%
count()
dll_data_wt_ty %>%
count(nrow)
count(dll_data_wt_ty)
nrow(dll_data_wt)
dll_data_wt_ty %>%
summarize(dim)
dll_data_wt_ty %>%
summarize(dim(.))
dll_data_Dll <- dll_data %>%
filter(genotype == "Dll") %>%
select (line, genotype, temp, SCT)
str(dll_data_Dll)
dll_data %>%
filter(genotype == "Dll") %>%
select(femur, tibia, SCT) %>%
summarise_each(mean, sd)
dll_data %>%
filter(genotype == "Dll") %>%
select(femur, tibia, SCT) %>%
summarise_across(mean, sd)
dll_data %>%
filter(genotype == "Dll") %>%
select(femur, tibia, SCT) %>%
across(mean, sd)
dll_data %>%
filter(genotype == "Dll") %>%
select(femur, tibia, SCT) %>%
across(mean)
?across
rm(dll_data_Dll, dll_data_wt, dll_data_new_subset, matched_set)
levels(dll_data$line)
table(dll_data$line)
line_names2 <- str_split(line_str, split = "-")
head(line_names2)
?str_split
line_names2 <- str_split(string = line_str,
pattern = "-",
simplify = TRUE)
line_names2 <- str_split(string = line_str,
pattern = "-",
simplify = TRUE)
line_names <- substr(line_str,
start = 6, stop= 1000000L )
line_names <- substr(dll_data$line,
start = 6, stop= 1000000L )
head(line_names)
tail(line_names)
line_names2 <- str_split(string = dll_data$line,
pattern = "-",
simplify = TRUE)
head(line_names2)
dll_data$line_names <- factor(line_names2[,2])
dll_data = read.csv("http://beaconcourse.pbworks.com/f/dll.csv",
h = T, stringsAsFactors = TRUE)
sessionInfo()
class(dll_data)
summary(dll_data)
str(dll_data)
dim(dll_data)
head(dll_data)
?is.na
is.na(dll_data)
sum(is.na(dll_data))
anyNA(dll_data)
mean(dll_data$femur, na.rm = TRUE)
duplicated(dll_data)
sum(duplicated(dll_data))
anyDuplicated(dll_data)
dll_data[891,]
dim(dll_data)
dll_data[anyDuplicated(dll_data),]
dll_data <- na.omit(dll_data)
mean(dll_data$femur)
anyDuplicated(dll_data)
new_rows <- dll_data[sample(nrow(dll_data), size = 5, replace = T ),]
dll_data2 <- rbind(dll_data, new_rows)
str(dll_data2)
new_rows <- dll_data[sample(nrow(dll_data), size = 5, replace = T ),]
dll_data2 <- rbind(dll_data, new_rows)
str(dll_data2)
duplicated(dll_data2)
sum(duplicated(dll_data2))
sum(duplicated(dll_data2))
dll_data2[duplicated(dll_data2), ]
dll_data_unique <- unique(dll_data2)
dim(dll_data_unique)
dim(dll_data2)
any(duplicated(dll_data_uniqe))
any(duplicated(dll_data_unique))
rm(dll_data_complete, dll_data_unique, dll_data2)
str(dll_data)
dll_data_wt <- subset(dll_data, genotype == "wt" )
dll_data_wt_V2 <- dll_data_wt[dll_data_wt$genotype == "wt", ]
dim(dll_data_wt)
dim(dll_data_wt_V2)
table(dll_data_wt$genotype)
table(dll_data$genotype)
summary(dll_data_wt$genotype)
summary(dll_data_wt$genotype)
dll_data_wt$genotype <- droplevels(dll_data_wt$genotype)
summary(dll_data_wt$genotype)
levels(dll_data$line)
dll_data$line <- as.character(dll_data$line)
levels(dll_data$line)
class(dll_data$line)
?substr
line_names <- substr(line_str,
start = 6, stop= 1000000L )
line_str <- as.character(dll_data$line)
str(line_str)
head(line_str)
line_names <- substr(line_str,
start = 6, stop= 1000000L )
head(line_names)
tail(line_names)
line_names
line_names2 <- strsplit(line_str, split = "-")
head(line_names2)
?strsplit
line_names2_mat <- matrix(unlist(line_names2),
ncol = 2,
byrow = TRUE)
head(line_names2_mat)
temp_string <- stringr::str_split(line_str,
pattern = "-",
simplify = TRUE)
head(temp_string)
line_names3 <- c("M", "m", "F", "F", "f", "M")
ine_names3
line_names3
line_names3 <- tolower(line_names3)
line_names3
str(dll_data$temp)
temp_as_factor <- with(dll_data,
factor(temp,
labels = c("LowTemp", "HighTemp")))
str(temp_as_factor)
temp_as_factor2 <- with(dll_data, ifelse(temp == 25, "LowTemp",
ifelse(temp == 30, "HighTemp", NA)))
temp_as_factor2 <- factor(temp_as_factor2)
str(temp_as_factor2)
head(sort(dll_data$SCT))
tail(sort(dll_data$SCT))
head(order(dll_data$SCT))
?order
dll_data_sorted <- dll_data[order(dll_data$SCT),]
head(dll_data_sorted)
line_names <- dll_data$line
levels(line_names)
elevations <- c(100, 300, 270, 250, 500, 900, 500, 1100, 500,
3000,500, 570, 150, 800, 600, 500, 1900, 100,
300, 270, 250, 500, 900, 500, 1100, 500, 600)
MeanDayTimeTemp <- c(rnorm(27, mean = 20, sd = 5))
elevation_data <- data.frame(levels(line_names),
elevations,
MeanDayTimeTemp)
line_names <- dll_data$line
levels(line_names)
str( dll_data$line)
line_names <- as.factor(dll_data$line)
levels(line_names)
elevations <- c(100, 300, 270, 250, 500, 900, 500, 1100, 500,
3000,500, 570, 150, 800, 600, 500, 1900, 100,
300, 270, 250, 500, 900, 500, 1100, 500, 600)
MeanDayTimeTemp <- c(rnorm(27, mean = 20, sd = 5))
elevation_data <- data.frame(levels(line_names),
elevations,
MeanDayTimeTemp)
elevation_data
dll_data
names(dll_data)
names(elevation_data)
names(elevation_data)[1] <- "line"
str(elevation_data)
merged_data <- merge(x = elevation_data,
y = dll_data,
sort = TRUE)
merged_data
View(merged_data)
